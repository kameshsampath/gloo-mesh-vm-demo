## Application
- name: "Download Crane"
  get_url:
    url: "https://github.com/google/go-containerregistry/releases/download/v0.6.0/go-containerregistry_Linux_x86_64.tar.gz"
    checksum: "sha256:b71c7ca16abff07787516efbe0c06c129d273f34490d6a85f815cec980fffe85"
    dest: "/tmp"

- name: "Extract Crane"
  become: yes
  unarchive:
    src: "/tmp/go-containerregistry_Linux_x86_64.tar.gz"
    dest: "/usr/local/bin"
    remote_src: yes
    include:
      - crane
      - gcrane

- name: "Force App install"
  become: yes
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /opt/app
    - /opt/application.tar.gz
  when: force_app_install | default(False)

- name: "Export {{ instance_app_image_name }} app to tarball"
  become: yes
  ansible.builtin.command:
    argv:
      - crane
      - export 
      - "{{ instance_app_image_repo }}/{{ instance_app_image_name }}:{{ instance_app_image_version }}"
      - /opt/application.tar.gz
    creates: /opt/application.tar.gz
  register: app_install

- name: "Extract App"
  become: yes
  unarchive:
    src: "/opt/application.tar.gz"
    dest: "/usr/local/bin"
    remote_src: yes
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    creates: "/usr/local/bin/application"
    include:
      - application
  when: app_install.rc == 0
  notify:
   - "Restart App"

- name: "Create '{{ instance_app_image_name }}' systemd unit"
  become: yes
  ansible.builtin.template:
    src: "app/app.service.j2"
    dest: "/etc/systemd/system/{{ instance_app_image_name }}-app.service"
    mode: '0644'
  notify:
   - "Restart App"

- name: "Enable and start {{ instance_app_image_name }} service"
  become: yes
  ansible.builtin.systemd:
    enabled: true
    daemon_reload: true
    state: started
    name: "{{ instance_app_image_name }}-app.service"